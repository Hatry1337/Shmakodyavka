<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>